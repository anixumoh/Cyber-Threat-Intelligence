import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';

@Injectable()
export class ProcessTreeEventHandlerService {
  processTreeEvent = new BehaviorSubject(null);
  private selectedProcess;

  constructor() {}

  onProcessClick(data) {
    if (data.type === 'ip') {
      const value = data.text;
      this.processTreeEvent.next({
        type: 'ip',
        data: {
          value,
        },
      });
      return;
    }

    if (data.type === 'domain') {
      const value = data.text;
      this.processTreeEvent.next({
        type: 'domain',
        data: {
          value,
        },
      });
      return;
    }

    const pid = data.key;
    if (isNaN(pid) && pid !== 'target') {
      return;
    }

    let eventType = 'click';
    if (pid === this.selectedProcess) {
      eventType = 'click-reopen_dialog';
    }
    if (pid === 'target') {
      eventType = 'click-target';
    }
    this.selectedProcess = pid;
    this.processTreeEvent.next({
      type: eventType,
      data: {
        pid: this.selectedProcess,
      },
    });
  }
}
