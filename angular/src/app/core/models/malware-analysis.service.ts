import { Injectable } from '@angular/core';
import { HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs';

import { HttpUtilsService, RequestOptions, path } from '../../services/http-utils.service';

@Injectable()
export class MalwareAnalysisService {
  constructor(private http: HttpUtilsService) {}

  list(organizationId, moduleId, queryParam) {
    Object.keys(queryParam).forEach((key) => (!queryParam[key] ? delete queryParam[key] : {}));
    const requestOptions = new RequestOptions();
    requestOptions.params = new HttpParams({ fromObject: queryParam });

    return this.http.get(
      `${path}/organization/${organizationId}/module/${moduleId}/threat_context/malware`,
      requestOptions
    );
  }

  getChartData(organizationId, moduleId, queryParam) {
    Object.keys(queryParam).forEach((key) => (!queryParam[key] ? delete queryParam[key] : {}));
    const requestOptions = new RequestOptions();
    requestOptions.params = new HttpParams({ fromObject: queryParam });

    return this.http.get(
      `${path}/organization/${organizationId}/module/${moduleId}/threat_context/malware-analytics`,
      requestOptions
    );
  }

  uploadMalwareFile(organizationId, moduleId, moduleName, file, isUrl: boolean = false, url = ''): Observable<any> {
    const allPath = `${path}/organization/${organizationId}/module/${moduleId}/threat_context/malware/upload`;
    const formData = new FormData();
    formData.append('fileInput', file);
    formData.append('type', 'file');
    formData.append('filename', file.name);

    return this.http.multipartFormPost(allPath, formData);
  }

  uploadMalwareUrl(organizationId, moduleId, moduleName, url) {
    return this.uploadMalwareFile.call(this, organizationId, moduleId, moduleName, null, true, url);
  }

  updateTLP(organizationId, moduleId, resourceId, status) {
    const allPath = `${path}/organization/${organizationId}/module/${moduleId}/threat_context/malware/${resourceId}/tlpStatus/${status}`;
    return this.http.put(allPath, {});
  }
}
