import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';
import { TreeModel, TreeModelSettings } from 'ng2-tree';

@Component({
  selector: 'app-malware-details-static-archive',
  templateUrl: './archive.component.html',
})
export class MalwareStaticArchive implements OnChanges {
  @Input() fileInfo;

  public tree: TreeModel = {
    value: '',
    children: [],
  };

  public treeSettings: TreeModelSettings = {
    cssClasses: {
      expanded: 'icon-caret-down',
      collapsed: 'icon-caret-right',
      empty: 'icon-caret-right disabled',
      leaf: 'fa',
    },
    templates: {
      node: '<i class="icon-folder"></i>',
      leaf: '<i class="icon-file"></i>',
    },
  };

  ngOnChanges(changes: SimpleChanges) {
    if (changes.hasOwnProperty('fileInfo')) {
      this.tree = this.generateTree(this.fileInfo, this.fileInfo.name);
      this.tree['settings'] = this.treeSettings;
    }
  }

  protected generateTree(rawTree, name = null) {
    if (!name) {
      name = this.getNodeName(rawTree);
    }
    let tree: TreeModel = {
      value: name,
    };
    if (!rawTree.hasOwnProperty('compressed_files')) {
      return tree;
    }
    tree.children = [];
    for (let child of rawTree.compressed_files) {
      tree.children.push(this.generateTree(child));
    }
    return tree;
  }

  protected getNodeName(node: any) {
    const name = node.name + ' - ' + node.md5 + ' - VT: ';
    let virusTotal = 'N/A';
    if (node.hasOwnProperty('VirusTotal') && node['VirusTotal']['detection_ratio']) {
      virusTotal = node['VirusTotal']['detection_ratio'];
    }
    return name + virusTotal;
  }
}
